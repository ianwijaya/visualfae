input {
  tcp {
    port => 5000
    type => syslog
  }
  udp {
    port => 5000
    type => syslog
  }
}

filter {
  if [type] == "syslog" {
    mutate {
		gsub => ["message","\"",""]
    }
    csv {
		separator => "#"
        columns => [
			"header",
			"geo_location",
			"ip_address_intelligence",
			"src_port",
			"dest_ip",
			"dest_port",
			"protocol",
			"method",
			"uri",
			"x_forwarded_for_header_value",
			"request_status",
			"support_id",
			"session_id",
			"username",
			"violations",
			"violation_rating",
			"attack_type",
			"query_string",
			"policy_name",
			"sig_ids",
			"sig_names",
			"sig_set_names",
			"severity",
			"request"

		]
    }
    grok {
       match => { "header" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} ASM:%{IP:source_ip}" }
    }
    geoip {
		source => "source_ip"
		database => "/etc/logstash/GeoLite2-City.mmdb"
    }
    mutate {
		remove_field => [ "message", "header" ]
    }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}


output {
  elasticsearch {
	hosts => ["localhost:9200"]
	manage_template => false
	index => "asm-index"
	document_type => "asm-log"
  }
  stdout {  }
}
